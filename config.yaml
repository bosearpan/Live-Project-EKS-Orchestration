---
#EKS cluster configuration
apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig
metadata:
  name: my-eks # name of cluster
  region: us-east-1
  version: "1.20" # kubernetes version
vpc: # Refer: https://github.com/weaveworks/eksctl/blob/main/examples/04-existing-vpc.yaml
  id: "vpc-01b4cbb8bb548adb4"  #Place your vpc
  subnets:
    public:
      public-us-east-1a:
        id: "subnet-0833b92fe8f2defb2"  #Place your subnets
        az: "us-east-1a"
      public-us-east-1b:
        id: "subnet-06e4021573037c9d4"  #Place your subnets
        az: "us-east-1b"
    private:
      private-us-east-1a:
        id: "subnet-085099d709792f805"  #Place your subnets
        az: "us-east-1a"
      private-us-east-1b:
        id: "subnet-019f215bd6e9551ef"  #Place your subnets
        az: "us-east-1b"
  clusterEndpoints:
    publicAccess:  true
    privateAccess: true
  nat:
    gateway: Disable # disable since already created

iam:
  withOIDC: true
  serviceAccounts: # pre-including some common iamserviceaccounts
  - metadata:
      name: aws-load-balancer-controller
      namespace: demo
    wellKnownPolicies:
      awsLoadBalancerController: true
  - metadata:
      name: ebs-csi-controller-sa
      namespace: demo
    wellKnownPolicies:
      ebsCSIController: true
  - metadata:
      name: efs-csi-controller-sa
      namespace: demo
    wellKnownPolicies:
      efsCSIController: true
  - metadata:
      name: external-dns
      namespace: demo
    wellKnownPolicies:
      externalDNS: true
  - metadata:
      name: cert-manager
      namespace: cert-manager
    wellKnownPolicies:
      certManager: true
  - metadata:
      name: cluster-autoscaler
      namespace: demo
      labels: {aws-usage: "cluster-ops"}
    wellKnownPolicies:
      autoScaler: true

nodeGroups:
  - name: pvt-201-a-1
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true" # tag is needed for cluster autoscaler. 
      k8s.io/cluster-autoscaler/my-eks: "shared" # cluster name tag is optional in latest versions of EKS
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 1
    minSize: 0
    maxSize: 3
    privateNetworking: true # include only in private subnet
    subnets:
      - private-us-east-1a # 1 AZ is enough for testing
  - name: pub-201-a-1
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/my-eks: "shared"
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 1
    minSize: 0
    maxSize: 3
    ssh:
     allow: true
    subnets:
      - public-us-east-1a
  - name: tainted
    labels: { role: workers }
    tags:
      k8s.io/cluster-autoscaler/enabled: "true"
      k8s.io/cluster-autoscaler/my-eks: "shared"
    instancesDistribution:
      instanceTypes:
        - t2.medium
    desiredCapacity: 1
    minSize: 0
    maxSize: 5
    privateNetworking: true
    subnets:
      - private-us-east-1b
